# -*- coding: utf-8 -*-
"""KMeans-Clustering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pwdm5H4-ie9XxVQfQ9YHgR9-2O87QHXh
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('https://raw.githubusercontent.com/machine-learning-course/syllabus/gh-pages/hiw-2019b/dataset-students-ml-2019b.csv')
df['nim'] = df['nim'].astype(str)

df.describe()

#Encode Categorical Variable
dow_of_birth_encode = {"dow_of_birth": {"Monday": 1, "Tuesday": 2, "Wednesday" : 3, "Thursday" : 4, "Friday" : 5, "Saturday" : 6, "Sunday" : 7}}
df.replace(dow_of_birth_encode, inplace=True)
df.head()

X = df.iloc[:,[4,8,9]].values

plt.scatter(X[:,0],X[:,1],X[:,2], label='True Position')

#Feature Scalling
from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
X = sc_X.fit_transform(X)

# x = (-0.82606424,-0.14486328,-0.28623472)
# y = (-0.59889658, -0.50617926,  0.1708175)
# distance = math.sqrt(sum([(a - b) ** 2 for a, b in zip(x, y)]))
# print(distance)

from sklearn.cluster import KMeans
#Applying k-means to the dataset
kmeans = KMeans(n_clusters = 4, max_iter=300, n_init=10)
kmeans.fit(X)
centers = kmeans.cluster_centers_

y_pred_clusters = kmeans.labels_

y_pred_clusters = [v +1 for v in y_pred_clusters]

dist = []
for i in range(len(X)):
  if (y_pred_clusters[i] == 1):
    dist.append(math.sqrt(sum([(a-b) **2 for a,b in zip(X[i], centers[0])])))
  elif (y_pred_clusters[i] == 2):
    dist.append(math.sqrt(sum([(a-b) **2 for a,b in zip(X[i], centers[1])])))
  elif (y_pred_clusters[i] == 3):
    dist.append(math.sqrt(sum([(a-b) **2 for a,b in zip(X[i], centers[2])])))
  elif (y_pred_clusters[i] == 4):
    dist.append(math.sqrt(sum([(a-b) **2 for a,b in zip(X[i], centers[3])])))

for i in range(len(X)): 
  print('%s,%s,%0.4f' % (df.iloc[i,0], y_pred_clusters[i], dist[i]))